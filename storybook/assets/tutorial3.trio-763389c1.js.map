{"version":3,"file":"tutorial3.trio-763389c1.js","sources":["../../../examples/dist/tutorials/code/tutorial3/vector.substance.js","../../../examples/dist/tutorials/code/tutorial3/vector.style.js","../../../examples/dist/tutorials/code/tutorial3/linearAlgebra.domain.js","../../../examples/dist/tutorials/tutorial3.trio.js"],"sourcesContent":["export default \"/* This is the starter code for the substance program for tutorial 3,\\n * which covers functions in Penrose. Follow along with the write-up. \\n * Good luck! :)\\n */\\n \\nVectorSpace U\\nVector v \\nVector w\\nIn(v, U)\\nIn(w, U)\\n\\n-- Start your code below\\n\\n\\n-- End your code above\\nAutoLabel All /* leave this as the last line */\";\n//# sourceMappingURL=vector.substance.js.map","import { makeResolver } from \"../../../resolver.js\";\nexport const resolver = makeResolver(\"tutorials/code/tutorial3\");\nexport default \"/* This is the starter code for the style program for tutorial 3,\\n * which covers functions in Penrose. Scroll down to the\\n * bottom and follow along with the write-up. Good luck! :)\\n */\\n\\n/* here are some useful constants that we use to draw\\n * the vector space\\n */\\ncanvas {\\n  width = 800\\n  height = 700\\n}\\n\\nconst {\\n  scalar vectorSpaceSize = 350.0\\n  scalar arrowheadSize = 0.7\\n  scalar lineThickness = 1.\\n  scalar arrowThickness = 1.5\\n  color gray = rgba(0.6, 0.6, 0.6, 1.)\\n  color lightBlue = rgba(0.2, 0.4, 0.8, 1.0)\\n  color lightGray = rgba(252, 252, 252, 0.015)\\n  color green = rgba(0., 0.8, 0., 1.)\\n  color none = rgba(0., 0., 0., 0.)\\n}\\n\\n/* here we draw a vector space by defining an origin\\n * of the vector space, and x-axis, y-axis that are\\n * centered at the origin\\n */\\nforall VectorSpace U {\\n    scalar axisSize = const.vectorSpaceSize / 2.0\\n    vec2 U.origin = (0., 0.)\\n    vec2 o = U.origin /* just so we don't need to type U.origin everytime */\\n    U.axisColor = const.gray\\n\\n    U.background = Rectangle {\\n        center : U.origin\\n        width : const.vectorSpaceSize\\n        height : const.vectorSpaceSize\\n        fillColor : const.lightGray\\n        strokeColor : const.none\\n    }\\n\\n    U.xAxis = Line {\\n        start : (o[0] - axisSize, o[1])\\n        end : (o[0] + axisSize, o[1])\\n        strokeWidth : const.lineThickness\\n        style : \\\"solid\\\"\\n        strokeColor : U.axisColor\\n        startArrowhead: \\\"straight\\\"\\n        endArrowhead: \\\"straight\\\"\\n        startArrowheadSize : const.arrowheadSize * 2.\\n        endArrowheadSize : const.arrowheadSize * 2.\\n    }\\n\\n    U.yAxis = Line {\\n        start : (o[0], o[1] - axisSize)\\n        end : (o[0], o[1] + axisSize)\\n        strokeWidth : const.lineThickness\\n        style : \\\"solid\\\"\\n        strokeColor : U.axisColor\\n        startArrowhead: \\\"straight\\\"\\n        endArrowhead: \\\"straight\\\"\\n        startArrowheadSize : const.arrowheadSize * 2.\\n        endArrowheadSize : const.arrowheadSize * 2.\\n    }\\n\\n    U.text = Equation {\\n        string : U.label\\n        center : (U.origin[0] - axisSize, U.origin[1] + axisSize)\\n        fillColor : U.axisColor\\n    }\\n}\\n\\n-- Start your code below\\n\\n-- End your code above\\n\";\n//# sourceMappingURL=vector.style.js.map","export default \"/* This is the starter code for the domain program for tutorial 3,\\n * which covers functions in Penrose. Follow along with the write-up.\\n * Good luck! :)\\n */\\n\\ntype VectorSpace\\ntype Vector\\npredicate In(Vector, VectorSpace V)\\n\\n-- Start your code below\\n\\n-- End your code above\\n\";\n//# sourceMappingURL=linearAlgebra.domain.js.map","import substance from \"./code/tutorial3/vector.substance.js\";\nimport style0, { resolver as resolver0 } from \"./code/tutorial3/vector.style.js\";\nimport domain from \"./code/tutorial3/linearAlgebra.domain.js\";\nexport default {\n    substance,\n    style: [\n        { contents: style0, resolver: resolver0 },\n    ],\n    domain,\n    variation: \"\"\n};\n//# sourceMappingURL=tutorial3.trio.js.map"],"names":["substance","resolver","makeResolver","style0","domain","tutorial3_trio","resolver0"],"mappings":"wEAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDCCFC,EAAWC,EAAa,0BAA0B,EAC/DC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECFfC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECGAC,EAAA,CACX,UAAAL,EACA,MAAO,CACH,CAAE,SAAUG,EAAQ,SAAUG,CAAW,CAC5C,EACD,OAAAF,EACA,UAAW,EACf"}