{"version":3,"file":"tree-tree.trio-def7ee02.js","sources":["../../../examples/dist/set-theory-domain/tree.style.js","../../../examples/dist/set-theory-domain/tree-tree.trio.js"],"sourcesContent":["import { makeResolver } from \"../resolver.js\";\nexport const resolver = makeResolver(\"set-theory-domain\");\nexport default \"canvas {\\n  width = 800\\n  height = 700\\n}\\n\\n\\nColors {\\n   color black = rgba(0.,0.,0.,1.)\\n   color red = rgba(1.,0.,0.,1.)\\n   color green = rgba(0.,.7,0.,1.)\\n   color blue = rgba(0.,0,1.,1.)\\n   color white = rgba(1.,1.,1.,1.)\\n   color lightGray = rgba(.8,.8,.8,1.)\\n}\\n\\nGlobal {\\n   shape box = Rectangle {\\n      center: (0.,0.)\\n      fillColor: none()\\n      strokeColor: Colors.lightGray\\n      strokeWidth: 2.\\n      width: canvas.width\\n      height: canvas.height\\n   }\\n\\n   scalar setRadius = 18.\\n}\\n\\nforall Set x {\\n\\n   vec2 x.center = (?,?)\\n\\n   x.icon = Text {\\n      center: x.center\\n      string: x.label\\n      fontFamily: \\\"Courier\\\"\\n      fontSize: \\\"20px\\\"\\n      fontWeight: \\\"bold\\\"\\n      fillColor: Colors.black\\n   }\\n\\n   x.bounds = Circle {\\n      center: x.center\\n      r: Global.setRadius\\n      fillColor: none()\\n   }\\n}\\n\\nforall Set x; Set y {\\n   -- Try to make sure no labels overlap\\n   encourage notTooClose(x.bounds, y.bounds, 5.0)\\n}\\n\\n\\nforall Set x; Set y\\nwhere IsSubset(x, y) {\\n\\n   vec2 p = x.center\\n   vec2 q = y.center\\n   vec2 u = unit(q-p)\\n   scalar r = Global.setRadius\\n\\n   arrow = Line {\\n      start: p + r*u\\n      end: q - r*u\\n      strokeWidth : 4.0\\n      strokeColor : rgba(0.0, 0.0, 0.0, 1.0)\\n      endArrowhead: \\\"straight\\\"\\n      endArrowheadSize: .5\\n   }\\n\\n   -- Position y above x\\n   encourage above(y.bounds, x.bounds)\\n\\n   -- Have sets 'fight' to be aligned with the superset's x-position\\n   encourage x.bounds.center[0] == y.bounds.center[0]\\n}\\n\\n/*\\n-- TODO: This one currently causes convergence to become very slow but works eventually\\n\\nSet x1; Set x2\\nwhere IsSubset(x1, S); IsSubset(x2, S)\\nwith Set S {\\n   -- If two sets are direct subsets of the same set, give them the same y-position\\n   heightFn = ensure sameHeight(x1.bounds, x2.bounds)\\n}\\n*/\\n\";\n//# sourceMappingURL=tree.style.js.map","import substance from \"./tree.substance.js\";\nimport style0, { resolver as resolver0 } from \"./tree.style.js\";\nimport domain from \"./setTheory.domain.js\";\nexport default {\n    substance,\n    style: [\n        { contents: style0, resolver: resolver0 },\n    ],\n    domain,\n    variation: \"\",\n    excludeWarnings: []\n};\n//# sourceMappingURL=tree-tree.trio.js.map"],"names":["resolver","makeResolver","style0","treeTree_trio","substance","resolver0","domain"],"mappings":"4KACO,MAAMA,EAAWC,EAAa,mBAAmB,EACxDC,EAAegBAAiB,CAAE,CACvB"}