{"version":3,"file":"blobs.trio-23f3b1be.js","sources":["../../../examples/dist/curve-examples/blobs/blobs.substance.js","../../../examples/dist/curve-examples/blobs/blobs.style.js","../../../examples/dist/curve-examples/blobs/blobs.domain.js","../../../examples/dist/curve-examples/blobs.trio.js"],"sourcesContent":["export default \"Manifold a, b\\n\\nMap m := MakeMap(a, b)\\n\\nLabel a \\\"M_1\\\"\\nLabel b \\\"M_2\\\"\\n\\nLabel m \\\"\\\\phi\\\"\\n\";\n//# sourceMappingURL=blobs.substance.js.map","import { makeResolver } from \"../../resolver.js\";\nexport const resolver = makeResolver(\"curve-examples/blobs\");\nexport default \"canvas {\\n  width = 800\\n  height = 800\\n}\\n\\nlayout = [manifolds, maps]\\n\\nsettings {\\n  lineThickness = 2\\n  arrowThickness = 1.5\\n  blobbiness = 0.93\\n  pi = 3.14159\\n  fontSize = \\\"15px\\\"\\n  blobDistance = 300\\n}\\n\\nforall Manifold m {\\n\\n  shape m.eq = Equation {\\n    center: centerOfMass(m.poly.points)\\n    string: m.label\\n    fontSize: settings.fontSize\\n  }\\n\\n  ensure isEquilateral(m.poly.points, true) in manifolds\\n\\n  scalar radius = 80\\n  scalar length = 2 * settings.pi * radius\\n  scalar area = settings.blobbiness * settings.pi * radius * radius\\n\\n  ensure perimeter(m.poly.points, true) == length in manifolds\\n  ensure signedArea(m.poly.points, true) == area in manifolds\\n  encourage elasticEnergy(m.poly.points, true) == 0 in manifolds\\n\\n  vec2 p0 = (? in manifolds, ? in manifolds)\\n  vec2 p1 = (? in manifolds, ? in manifolds)\\n  vec2 p2 = (? in manifolds, ? in manifolds)\\n  vec2 p3 = (? in manifolds, ? in manifolds)\\n  vec2 p4 = (? in manifolds, ? in manifolds)\\n  vec2 p5 = (? in manifolds, ? in manifolds)\\n  vec2 p6 = (? in manifolds, ? in manifolds)\\n  vec2 p7 = (? in manifolds, ? in manifolds)\\n  vec2 p8 = (? in manifolds, ? in manifolds)\\n  vec2 p9 = (? in manifolds, ? in manifolds)\\n  vec2 p10 = (? in manifolds, ? in manifolds)\\n  vec2 p11 = (? in manifolds, ? in manifolds)\\n  vec2 p12 = (? in manifolds, ? in manifolds)\\n  vec2 p13 = (? in manifolds, ? in manifolds)\\n  vec2 p14 = (? in manifolds, ? in manifolds)\\n  vec2 p15 = (? in manifolds, ? in manifolds)\\n  vec2 p16 = (? in manifolds, ? in manifolds)\\n  vec2 p17 = (? in manifolds, ? in manifolds)\\n  vec2 p18 = (? in manifolds, ? in manifolds)\\n  vec2 p19 = (? in manifolds, ? in manifolds)\\n  vec2 p20 = (? in manifolds, ? in manifolds)\\n  vec2 p21 = (? in manifolds, ? in manifolds)\\n  vec2 p22 = (? in manifolds, ? in manifolds)\\n  vec2 p23 = (? in manifolds, ? in manifolds)\\n  vec2 p24 = (? in manifolds, ? in manifolds)\\n  vec2 p25 = (? in manifolds, ? in manifolds)\\n  vec2 p26 = (? in manifolds, ? in manifolds)\\n  vec2 p27 = (? in manifolds, ? in manifolds)\\n  vec2 p28 = (? in manifolds, ? in manifolds)\\n  vec2 p29 = (? in manifolds, ? in manifolds)\\n  vec2 p30 = (? in manifolds, ? in manifolds)\\n  vec2 p31 = (? in manifolds, ? in manifolds)\\n  vec2 p32 = (? in manifolds, ? in manifolds)\\n  vec2 p33 = (? in manifolds, ? in manifolds)\\n  vec2 p34 = (? in manifolds, ? in manifolds)\\n  vec2 p35 = (? in manifolds, ? in manifolds)\\n  vec2 p36 = (? in manifolds, ? in manifolds)\\n  vec2 p37 = (? in manifolds, ? in manifolds)\\n  vec2 p38 = (? in manifolds, ? in manifolds)\\n  vec2 p39 = (? in manifolds, ? in manifolds)\\n  vec2 p40 = (? in manifolds, ? in manifolds)\\n  vec2 p41 = (? in manifolds, ? in manifolds)\\n  vec2 p42 = (? in manifolds, ? in manifolds)\\n  vec2 p43 = (? in manifolds, ? in manifolds)\\n  vec2 p44 = (? in manifolds, ? in manifolds)\\n  vec2 p45 = (? in manifolds, ? in manifolds)\\n  vec2 p46 = (? in manifolds, ? in manifolds)\\n  vec2 p47 = (? in manifolds, ? in manifolds)\\n  vec2 p48 = (? in manifolds, ? in manifolds)\\n  vec2 p49 = (? in manifolds, ? in manifolds)\\n  vec2 p50 = (? in manifolds, ? in manifolds)\\n  vec2 p51 = (? in manifolds, ? in manifolds)\\n  vec2 p52 = (? in manifolds, ? in manifolds)\\n  vec2 p53 = (? in manifolds, ? in manifolds)\\n  vec2 p54 = (? in manifolds, ? in manifolds)\\n  vec2 p55 = (? in manifolds, ? in manifolds)\\n  vec2 p56 = (? in manifolds, ? in manifolds)\\n  vec2 p57 = (? in manifolds, ? in manifolds)\\n  vec2 p58 = (? in manifolds, ? in manifolds)\\n  vec2 p59 = (? in manifolds, ? in manifolds)\\n  vec2 p60 = (? in manifolds, ? in manifolds)\\n  vec2 p61 = (? in manifolds, ? in manifolds)\\n  vec2 p62 = (? in manifolds, ? in manifolds)\\n  vec2 p63 = (? in manifolds, ? in manifolds)\\n  vec2 p64 = (? in manifolds, ? in manifolds)\\n  vec2 p65 = (? in manifolds, ? in manifolds)\\n  vec2 p66 = (? in manifolds, ? in manifolds)\\n  vec2 p67 = (? in manifolds, ? in manifolds)\\n  vec2 p68 = (? in manifolds, ? in manifolds)\\n  vec2 p69 = (? in manifolds, ? in manifolds)\\n  vec2 p70 = (? in manifolds, ? in manifolds)\\n  vec2 p71 = (? in manifolds, ? in manifolds)\\n  vec2 p72 = (? in manifolds, ? in manifolds)\\n  vec2 p73 = (? in manifolds, ? in manifolds)\\n  vec2 p74 = (? in manifolds, ? in manifolds)\\n  vec2 p75 = (? in manifolds, ? in manifolds)\\n  vec2 p76 = (? in manifolds, ? in manifolds)\\n  vec2 p77 = (? in manifolds, ? in manifolds)\\n  vec2 p78 = (? in manifolds, ? in manifolds)\\n  vec2 p79 = (? in manifolds, ? in manifolds)\\n  vec2 p80 = (? in manifolds, ? in manifolds)\\n  vec2 p81 = (? in manifolds, ? in manifolds)\\n  vec2 p82 = (? in manifolds, ? in manifolds)\\n  vec2 p83 = (? in manifolds, ? in manifolds)\\n  vec2 p84 = (? in manifolds, ? in manifolds)\\n  vec2 p85 = (? in manifolds, ? in manifolds)\\n  vec2 p86 = (? in manifolds, ? in manifolds)\\n  vec2 p87 = (? in manifolds, ? in manifolds)\\n  vec2 p88 = (? in manifolds, ? in manifolds)\\n  vec2 p89 = (? in manifolds, ? in manifolds)\\n  vec2 p90 = (? in manifolds, ? in manifolds)\\n  vec2 p91 = (? in manifolds, ? in manifolds)\\n  vec2 p92 = (? in manifolds, ? in manifolds)\\n  vec2 p93 = (? in manifolds, ? in manifolds)\\n  vec2 p94 = (? in manifolds, ? in manifolds)\\n  vec2 p95 = (? in manifolds, ? in manifolds)\\n  vec2 p96 = (? in manifolds, ? in manifolds)\\n  vec2 p97 = (? in manifolds, ? in manifolds)\\n  vec2 p98 = (? in manifolds, ? in manifolds)\\n  vec2 p99 = (? in manifolds, ? in manifolds)\\n\\n  shape m.poly = Polygon {\\n    points: [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36, p37, p38, p39, p40, p41, p42, p43, p44, p45, p46, p47, p48, p49, p50, p51, p52, p53, p54, p55, p56, p57, p58, p59, p60, p61, p62, p63, p64, p65, p66, p67, p68, p69, p70, p71, p72, p73, p74, p75,  p76, p77, p78, p79, p80, p81, p82, p83, p84, p85, p86, p87, p88, p89, p90, p91, p92, p93, p94, p95, p96, p97, p98, p99]\\n    strokeWidth: settings.lineThickness\\n    strokeColor: #000\\n  }\\n  \\n}\\n\\nforall Manifold a; Manifold b {\\n\\n  ca = centerOfMass(a.poly.points)\\n  cb = centerOfMass(b.poly.points)\\n  ensure lessThan(settings.blobDistance, vdist(ca, cb)) in manifolds\\n\\n}\\n\\nforall Manifold a; Manifold b; Map m where m := MakeMap(a, b) {\\n\\n  vec2 p0 = (?, ?)\\n  vec2 p1 = (?, ?)\\n  vec2 p2 = (?, ?)\\n  vec2 p3 = (?, ?)\\n  vec2 p4 = (?, ?)\\n  vec2 p5 = (?, ?)\\n  vec2 p6 = (?, ?)\\n  vec2 p7 = (?, ?)\\n  vec2 p8 = (?, ?)\\n  vec2 p9 = (?, ?)\\n  vec2 p10 = (?, ?)\\n  vec2 p11 = (?, ?)\\n  vec2 p12 = (?, ?)\\n  vec2 p13 = (?, ?)\\n  vec2 p14 = (?, ?)\\n  vec2 p15 = (?, ?)\\n  vec2 p16 = (?, ?)\\n  vec2 p17 = (?, ?)\\n  vec2 p18 = (?, ?)\\n  vec2 p19 = (?, ?)\\n  vec2 p20 = (?, ?)\\n  vec2 p21 = (?, ?)\\n  vec2 p22 = (?, ?)\\n  vec2 p23 = (?, ?)\\n  vec2 p24 = (?, ?)\\n  vec2 p25 = (?, ?)\\n  vec2 p26 = (?, ?)\\n  vec2 p27 = (?, ?)\\n  vec2 p28 = (?, ?)\\n  vec2 p29 = (?, ?)\\n  vec2 p30 = (?, ?)\\n  vec2 p31 = (?, ?)\\n  vec2 p32 = (?, ?)\\n  vec2 p33 = (?, ?)\\n  vec2 p34 = (?, ?)\\n  vec2 p35 = (?, ?)\\n  vec2 p36 = (?, ?)\\n  vec2 p37 = (?, ?)\\n  vec2 p38 = (?, ?)\\n  vec2 p39 = (?, ?)\\n  vec2 p40 = (?, ?)\\n  vec2 p41 = (?, ?)\\n  vec2 p42 = (?, ?)\\n  vec2 p43 = (?, ?)\\n  vec2 p44 = (?, ?)\\n  vec2 p45 = (?, ?)\\n  vec2 p46 = (?, ?)\\n  vec2 p47 = (?, ?)\\n  vec2 p48 = (?, ?)\\n  vec2 p49 = (?, ?)\\n\\n  shape m.poly = Polyline {\\n    points: [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36, p37, p38, p39, p40, p41, p42, p43, p44, p45, p46, p47, p48, p49]\\n    strokeWidth: settings.lineThickness\\n    strokeColor: #0000\\n    endArrowhead: \\\"straight\\\"\\n  }\\n\\n  shape m.s0 = Line {\\n    start: p0\\n    strokeWidth: settings.lineThickness\\n    end: p1\\n    strokeColor: rgba(0,0,0,1.00)\\n  }\\n  shape m.s1 = Line {\\n    start: p1\\n    strokeWidth: settings.lineThickness\\n    end: p2\\n    strokeColor: rgba(0,0,0,0.98)\\n  }\\n  shape m.s2 = Line {\\n    start: p2\\n    strokeWidth: settings.lineThickness\\n    end: p3\\n    strokeColor: rgba(0,0,0,0.96)\\n  }\\n  shape m.s3 = Line {\\n    start: p3\\n    strokeWidth: settings.lineThickness\\n    end: p4\\n    strokeColor: rgba(0,0,0,0.94)\\n  }\\n  shape m.s4 = Line {\\n    start: p4\\n    strokeWidth: settings.lineThickness\\n    end: p5\\n    strokeColor: rgba(0,0,0,0.92)\\n  }\\n  shape m.s5 = Line {\\n    start: p5\\n    strokeWidth: settings.lineThickness\\n    end: p6\\n    strokeColor: rgba(0,0,0,0.90)\\n  }\\n  shape m.s6 = Line {\\n    start: p6\\n    strokeWidth: settings.lineThickness\\n    end: p7\\n    strokeColor: rgba(0,0,0,0.88)\\n  }\\n  shape m.s7 = Line {\\n    start: p7\\n    strokeWidth: settings.lineThickness\\n    end: p8\\n    strokeColor: rgba(0,0,0,0.86)\\n  }\\n  shape m.s8 = Line {\\n    start: p8\\n    strokeWidth: settings.lineThickness\\n    end: p9\\n    strokeColor: rgba(0,0,0,0.84)\\n  }\\n  shape m.s9 = Line {\\n    start: p9\\n    strokeWidth: settings.lineThickness\\n    end: p10\\n    strokeColor: rgba(0,0,0,0.82)\\n  }\\n  shape m.s10 = Line {\\n    start: p10\\n    strokeWidth: settings.lineThickness\\n    end: p11\\n    strokeColor: rgba(0,0,0,0.80)\\n  }\\n  shape m.s11 = Line {\\n    start: p11\\n    strokeWidth: settings.lineThickness\\n    end: p12\\n    strokeColor: rgba(0,0,0,0.78)\\n  }\\n  shape m.s12 = Line {\\n    start: p12\\n    strokeWidth: settings.lineThickness\\n    end: p13\\n    strokeColor: rgba(0,0,0,0.76)\\n  }\\n  shape m.s13 = Line {\\n    start: p13\\n    strokeWidth: settings.lineThickness\\n    end: p14\\n    strokeColor: rgba(0,0,0,0.74)\\n  }\\n  shape m.s14 = Line {\\n    start: p14\\n    strokeWidth: settings.lineThickness\\n    end: p15\\n    strokeColor: rgba(0,0,0,0.72)\\n  }\\n  shape m.s15 = Line {\\n    start: p15\\n    strokeWidth: settings.lineThickness\\n    end: p16\\n    strokeColor: rgba(0,0,0,0.70)\\n  }\\n  shape m.s16 = Line {\\n    start: p16\\n    strokeWidth: settings.lineThickness\\n    end: p17\\n    strokeColor: rgba(0,0,0,0.68)\\n  }\\n  shape m.s17 = Line {\\n    start: p17\\n    strokeWidth: settings.lineThickness\\n    end: p18\\n    strokeColor: rgba(0,0,0,0.66)\\n  }\\n  shape m.s18 = Line {\\n    start: p18\\n    strokeWidth: settings.lineThickness\\n    end: p19\\n    strokeColor: rgba(0,0,0,0.64)\\n  }\\n  shape m.s19 = Line {\\n    start: p19\\n    strokeWidth: settings.lineThickness\\n    end: p20\\n    strokeColor: rgba(0,0,0,0.62)\\n  }\\n  shape m.s20 = Line {\\n    start: p20\\n    strokeWidth: settings.lineThickness\\n    end: p21\\n    strokeColor: rgba(0,0,0,0.60)\\n  }\\n  shape m.s21 = Line {\\n    start: p21\\n    strokeWidth: settings.lineThickness\\n    end: p22\\n    strokeColor: rgba(0,0,0,0.58)\\n  }\\n  shape m.s22 = Line {\\n    start: p22\\n    strokeWidth: settings.lineThickness\\n    end: p23\\n    strokeColor: rgba(0,0,0,0.56)\\n  }\\n  shape m.s23 = Line {\\n    start: p23\\n    strokeWidth: settings.lineThickness\\n    end: p24\\n    strokeColor: rgba(0,0,0,0.54)\\n  }\\n  shape m.s24 = Line {\\n    start: p24\\n    strokeWidth: settings.lineThickness\\n    end: p25\\n    strokeColor: rgba(0,0,0,0.52)\\n  }\\n  shape m.s25 = Line {\\n    start: p25\\n    strokeWidth: settings.lineThickness\\n    end: p26\\n    strokeColor: rgba(0,0,0,0.5)\\n  }\\n  shape m.s26 = Line {\\n    start: p26\\n    strokeWidth: settings.lineThickness\\n    end: p27\\n    strokeColor: rgba(0,0,0,0.48)\\n  }\\n  shape m.s27 = Line {\\n    start: p27\\n    strokeWidth: settings.lineThickness\\n    end: p28\\n    strokeColor: rgba(0,0,0,0.46)\\n  }\\n  shape m.s28 = Line {\\n    start: p28\\n    strokeWidth: settings.lineThickness\\n    end: p29\\n    strokeColor: rgba(0,0,0,0.44)\\n  }\\n  shape m.s29 = Line {\\n    start: p29\\n    strokeWidth: settings.lineThickness\\n    end: p30\\n    strokeColor: rgba(0,0,0,0.42)\\n  }\\n  shape m.s30 = Line {\\n    start: p30\\n    strokeWidth: settings.lineThickness\\n    end: p31\\n    strokeColor: rgba(0,0,0,0.4)\\n  }\\n  shape m.s31 = Line {\\n    start: p31\\n    strokeWidth: settings.lineThickness\\n    end: p32\\n    strokeColor: rgba(0,0,0,0.38)\\n  }\\n  shape m.s32 = Line {\\n    start: p32\\n    strokeWidth: settings.lineThickness\\n    end: p33\\n    strokeColor: rgba(0,0,0,0.36)\\n  }\\n  shape m.s33 = Line {\\n    start: p33\\n    strokeWidth: settings.lineThickness\\n    end: p34\\n    strokeColor: rgba(0,0,0,0.34)\\n  }\\n  shape m.s34 = Line {\\n    start: p34\\n    strokeWidth: settings.lineThickness\\n    end: p35\\n    strokeColor: rgba(0,0,0,0.32)\\n  }\\n  shape m.s35 = Line {\\n    start: p35\\n    strokeWidth: settings.lineThickness\\n    end: p36\\n    strokeColor: rgba(0,0,0,0.30)\\n  }\\n  shape m.s36 = Line {\\n    start: p36\\n    strokeWidth: settings.lineThickness\\n    end: p37\\n    strokeColor: rgba(0,0,0,0.28)\\n  }\\n  shape m.s37 = Line {\\n    start: p37\\n    strokeWidth: settings.lineThickness\\n    end: p38\\n    strokeColor: rgba(0,0,0,0.26)\\n  }\\n  shape m.s38 = Line {\\n    start: p38\\n    strokeWidth: settings.lineThickness\\n    end: p39\\n    strokeColor: rgba(0,0,0,0.24)\\n  }\\n  shape m.s39 = Line {\\n    start: p39\\n    strokeWidth: settings.lineThickness\\n    end: p40\\n    strokeColor: rgba(0,0,0,0.22)\\n  }\\n  shape m.s40 = Line {\\n    start: p40\\n    strokeWidth: settings.lineThickness\\n    end: p41\\n    strokeColor: rgba(0,0,0,0.20)\\n  }\\n  shape m.s41 = Line {\\n    start: p41\\n    strokeWidth: settings.lineThickness\\n    end: p42\\n    strokeColor: rgba(0,0,0,0.18)\\n  }\\n  shape m.s42 = Line {\\n    start: p42\\n    strokeWidth: settings.lineThickness\\n    end: p43\\n    strokeColor: rgba(0,0,0,0.16)\\n  }\\n  shape m.s43 = Line {\\n    start: p43\\n    strokeWidth: settings.lineThickness\\n    end: p44\\n    strokeColor: rgba(0,0,0,0.14)\\n  }\\n  shape m.s44 = Line {\\n    start: p44\\n    strokeWidth: settings.lineThickness\\n    end: p45\\n    strokeColor: rgba(0,0,0,0.12)\\n  }\\n  shape m.s45 = Line {\\n    start: p45\\n    strokeWidth: settings.lineThickness\\n    end: p46\\n    strokeColor: rgba(0,0,0,0.10)\\n  }\\n  shape m.s46 = Line {\\n    start: p46\\n    strokeWidth: settings.lineThickness\\n    end: p47\\n    strokeColor: rgba(0,0,0,0.08)\\n  }\\n  shape m.s47 = Line {\\n    start: p47\\n    strokeWidth: settings.lineThickness\\n    end: p48\\n    strokeColor: rgba(0,0,0,0.06)\\n  }\\n  shape m.s48 = Line {\\n    start: p48\\n    strokeWidth: settings.lineThickness\\n    end: p49\\n    strokeColor: rgba(0,0,0,0.04)\\n  }\\n\\n  shape m.arrow = Line {\\n    start: p0 + 10 * normalize(p1 - p0)\\n    end: p1 + 15 * normalize(p1 - p0)\\n    strokeWidth: settings.arrowThickness\\n    strokeColor: #000\\n    endArrowhead: \\\"straight\\\"\\n  }\\n\\n  pa = closestPoint(a.poly, p0)\\n  ensure vdist(pa, p0) == 15 in maps\\n\\n  pb = closestPoint(b.poly, p49)\\n  ensure vdist(pb, p49) == 15 in maps\\n  ensure isEquilateral(m.poly.points, false)\\n\\n  ensure elasticEnergy(m.poly.points, false) == 0 in maps\\n  ensure perimeter(m.poly.points, false) == 5 in manifolds\\n\\n  ensure vdist(pa, p0) + vdist(p0, p1) == vdist(pa, p1)\\n  ensure vdist(pb, p49) + vdist(p48, p49) == vdist(pb, p48)\\n\\n  shape m.eq = Equation {\\n    string: m.label\\n    fontSize: settings.fontSize\\n  }\\n\\n  ensure vdist(m.eq.center, p24) == 20 in maps\\n\\n  ca = centerOfMass(a.poly.points)\\n  cb = centerOfMass(b.poly.points)\\n  ensure vdist(m.eq.center, ca) == vdist(m.eq.center, cb) in maps\\n\\n}\\n\";\n//# sourceMappingURL=blobs.style.js.map","export default \"type Manifold\\ntype Map\\n\\nconstructor MakeMap(Manifold a, Manifold b) -> Map\\n\";\n//# sourceMappingURL=blobs.domain.js.map","import substance from \"./blobs/blobs.substance.js\";\nimport style0, { resolver as resolver0 } from \"./blobs/blobs.style.js\";\nimport domain from \"./blobs/blobs.domain.js\";\nexport default {\n    substance,\n    style: [\n        { contents: style0, resolver: resolver0 },\n    ],\n    domain,\n    variation: \"LavendaireWombat86913\"\n};\n//# sourceMappingURL=blobs.trio.js.map"],"names":["substance","resolver","makeResolver","style0","domain","blobs_trio","resolver0"],"mappings":"wEAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECCFC,EAAWC,EAAa,sBAAsB,EAC3DC,EAAefC,EAAe;AAAA;AAAA;AAAA;AAAA,ECGAC,EAAA,CACX,UAAAL,EACA,MAAO,CACH,CAAE,SAAUG,EAAQ,SAAUG,CAAW,CAC5C,EACD,OAAAF,EACA,UAAW,uBACf"}