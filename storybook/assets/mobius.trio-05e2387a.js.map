{"version":3,"file":"mobius.trio-05e2387a.js","sources":["../../../examples/dist/mobius/mobius.substance.js","../../../examples/dist/mobius/mobius.style.js","../../../examples/dist/mobius/mobius.domain.js","../../../examples/dist/mobius/mobius.trio.js"],"sourcesContent":["export default \"Center r\\n\\nCircle c1, c2, c3\\n\\nShape ic1 := Inversion(c1, r)\\nShape ic2 := Inversion(c2, r)\\nShape ic3 := Inversion(c3, r)\\n\\nLabel r $S^1$\\n\\nLabel c1 $c_1$\\nLabel c2 $c_2$\\nLabel c3 $c_3$\\n\\nLabel ic1 $c'_1$\\nLabel ic2 $c'_2$\\nLabel ic3 $c'_3$\";\n//# sourceMappingURL=mobius.substance.js.map","import { makeResolver } from \"../resolver.js\";\nexport const resolver = makeResolver(\"mobius\");\nexport default \"canvas {\\n    width = 800\\n    height = 700\\n}\\n\\nforall Shape s {\\n    shape s.eq = Equation {\\n        center: s.center\\n        string: s.label\\n        fontSize: \\\"15px\\\"\\n    }\\n}\\n\\nforall Center c {\\n    vec2 c.center = (?, ?)\\n    scalar c.r = ?\\n    shape c.circle = Circle {\\n        center: c.center\\n        r: c.r\\n        fillColor: rgba(0, 0, 0, 0)\\n        strokeWidth: 2\\n        strokeStyle: \\\"dashed\\\"\\n        strokeColor: rgba(0, 0, 0, 1)\\n    }\\n    shape c.point = Circle {\\n        center: c.center\\n        fillColor: rgba(0, 0, 0, 1)\\n        r: 3\\n    }\\n    shape c.eq = Equation {\\n        string: c.label\\n        fontSize: \\\"15px\\\"\\n    }\\n    ensure lessThan(100, c.r)\\n    ensure touching(c.eq, c.circle, 5)\\n}\\n\\nforall Circle c {\\n    vec2 c.center = (?, ?)\\n    scalar c.r = ?\\n    shape c.circle = Circle {\\n        center: c.center\\n        r: c.r\\n    }\\n    ensure lessThan(30, c.r)\\n}\\n\\nforall Point p {\\n    vec2 p.pos = (?, ?)\\n    shape p.point = Circle {\\n      r: 5\\n      center: p.pos\\n    }\\n}\\n\\nforall Shape s; Point p; Center r\\nwhere s := Inversion( p, r ) {\\n    scalar s.d2 = vdistsq(p.pos, r.center)\\n    scalar s.coef = r.r * r.r / s.d2\\n    vec2 s.pos = r.center + s.coef * (p.pos - r.center)\\n    shape s.point = Circle {\\n        r: 5\\n        fillColor: p.point.fillColor\\n        center: s.pos\\n    }\\n}\\n\\nforall Shape s; Circle c; Center r\\nwhere s := Inversion( c, r ) {\\n    scalar s.d = vdist( c.center, r.center )\\n\\n    scalar s.coef1 = ( s.d - c.r ) / s.d\\n    vec2 s.p1 = r.center + s.coef1 * (c.center - r.center)\\n\\n    scalar s.i1coef = r.r * r.r / vdistsq( r.center, s.p1 )\\n    vec2 s.ip1 = r.center + s.i1coef * ( s.p1  - r.center)\\n\\n    scalar s.coef2 = (s.d + c.r) / s.d\\n    vec2 s.p2 = r.center + s.coef2 * (c.center - r.center)\\n\\n    scalar s.i2coef = r.r * r.r / vdistsq( r.center, s.p2 )\\n    vec2 s.ip2 = r.center + s.i2coef * ( s.p2  - r.center )\\n\\n    scalar s.r = vdist(s.ip1, s.ip2) / 2\\n    vec2 s.center = 0.5 * (s.ip1 + s.ip2)\\n\\n    shape s.circle = Circle {\\n        r: s.r\\n        fillColor: c.circle.fillColor\\n        center: s.center\\n    }\\n\\n    ensure lessThan(30, s.r)\\n}\\n\\nforall Circle c1; Circle c2 {\\n    ensure touching(c1.circle, c2.circle)\\n}\\n\\nforall Center r; Circle c {\\n    ensure contains(r.circle, c.circle, 30)\\n}\\n\\nforall Shape s1; Shape s2 {\\n    s1.eq above s2.circle\\n}\";\n//# sourceMappingURL=mobius.style.js.map","export default \"type Center\\ntype Shape\\n\\ntype Point\\ntype Circle\\n\\nPoint <: Shape\\nCircle <: Shape\\n\\nconstructor Inversion( Shape original, Center center ) -> Shape\";\n//# sourceMappingURL=mobius.domain.js.map","import substance from \"./mobius.substance.js\";\nimport style0, { resolver as resolver0 } from \"./mobius.style.js\";\nimport domain from \"./mobius.domain.js\";\nexport default {\n    substance,\n    style: [\n        { contents: style0, resolver: resolver0 },\n    ],\n    domain,\n    variation: \"BrimstoneAntelope3300\"\n};\n//# sourceMappingURL=mobius.trio.js.map"],"names":["substance","resolver","makeResolver","style0","domain","mobius_trio","resolver0"],"mappings":"wEAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBCCFC,EAAWC,EAAa,QAAQ,EAC7CC,EAAefC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iECGAC,EAAA,CACX,UAAAL,EACA,MAAO,CACH,CAAE,SAAUG,EAAQ,SAAUG,CAAW,CAC5C,EACD,OAAAF,EACA,UAAW,uBACf"}