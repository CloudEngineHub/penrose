{"version":3,"file":"closed-elastic-curve.trio-49d04af8.js","sources":["../../../examples/dist/curve-examples/closed-elastic-curve.style.js","../../../examples/dist/curve-examples/closed-elastic-curve.trio.js"],"sourcesContent":["import { makeResolver } from \"../resolver.js\";\nexport const resolver = makeResolver(\"curve-examples\");\nexport default \"canvas {\\n    width = 600\\n    height = 400\\n}\\n\\nforall Curve c {\\n\\n  scalar length = 1000\\n\\n  -- TODO: is there a better way?\\n  vec2 p0 = (?, ?)\\n  vec2 p1 = (?, ?)\\n  vec2 p2 = (?, ?)\\n  vec2 p3 = (?, ?)\\n  vec2 p4 = (?, ?)\\n  vec2 p5 = (?, ?)\\n  vec2 p6 = (?, ?)\\n  vec2 p7 = (?, ?)\\n  vec2 p8 = (?, ?)\\n  vec2 p9 = (?, ?)\\n  vec2 p10 = (?, ?)\\n  vec2 p11 = (?, ?)\\n  vec2 p12 = (?, ?)\\n  vec2 p13 = (?, ?)\\n  vec2 p14 = (?, ?)\\n  vec2 p15 = (?, ?)\\n  vec2 p16 = (?, ?)\\n  vec2 p17 = (?, ?)\\n  vec2 p18 = (?, ?)\\n  vec2 p19 = (?, ?)\\n  vec2 p20 = (?, ?)\\n  vec2 p21 = (?, ?)\\n  vec2 p22 = (?, ?)\\n  vec2 p23 = (?, ?)\\n  vec2 p24 = (?, ?)\\n  vec2 p25 = (?, ?)\\n  vec2 p26 = (?, ?)\\n  vec2 p27 = (?, ?)\\n  vec2 p28 = (?, ?)\\n  vec2 p29 = (?, ?)\\n  vec2 p30 = (?, ?)\\n  vec2 p31 = (?, ?)\\n  vec2 p32 = (?, ?)\\n  vec2 p33 = (?, ?)\\n  vec2 p34 = (?, ?)\\n  vec2 p35 = (?, ?)\\n  vec2 p36 = (?, ?)\\n  vec2 p37 = (?, ?)\\n  vec2 p38 = (?, ?)\\n  vec2 p39 = (?, ?)\\n  vec2 p40 = (?, ?)\\n  vec2 p41 = (?, ?)\\n  vec2 p42 = (?, ?)\\n  vec2 p43 = (?, ?)\\n  vec2 p44 = (?, ?)\\n  vec2 p45 = (?, ?)\\n  vec2 p46 = (?, ?)\\n  vec2 p47 = (?, ?)\\n  vec2 p48 = (?, ?)\\n  vec2 p49 = (?, ?)\\n  vec2 p50 = (?, ?)\\n  vec2 p51 = (?, ?)\\n  vec2 p52 = (?, ?)\\n  vec2 p53 = (?, ?)\\n  vec2 p54 = (?, ?)\\n  vec2 p55 = (?, ?)\\n  vec2 p56 = (?, ?)\\n  vec2 p57 = (?, ?)\\n  vec2 p58 = (?, ?)\\n  vec2 p59 = (?, ?)\\n  vec2 p60 = (?, ?)\\n  vec2 p61 = (?, ?)\\n  vec2 p62 = (?, ?)\\n  vec2 p63 = (?, ?)\\n  vec2 p64 = (?, ?)\\n  vec2 p65 = (?, ?)\\n  vec2 p66 = (?, ?)\\n  vec2 p67 = (?, ?)\\n  vec2 p68 = (?, ?)\\n  vec2 p69 = (?, ?)\\n  vec2 p70 = (?, ?)\\n  vec2 p71 = (?, ?)\\n  vec2 p72 = (?, ?)\\n  vec2 p73 = (?, ?)\\n  vec2 p74 = (?, ?)\\n  vec2 p75 = (?, ?)\\n  vec2 p76 = (?, ?)\\n  vec2 p77 = (?, ?)\\n  vec2 p78 = (?, ?)\\n  vec2 p79 = (?, ?)\\n  vec2 p80 = (?, ?)\\n  vec2 p81 = (?, ?)\\n  vec2 p82 = (?, ?)\\n  vec2 p83 = (?, ?)\\n  vec2 p84 = (?, ?)\\n  vec2 p85 = (?, ?)\\n  vec2 p86 = (?, ?)\\n  vec2 p87 = (?, ?)\\n  vec2 p88 = (?, ?)\\n  vec2 p89 = (?, ?)\\n  vec2 p90 = (?, ?)\\n  vec2 p91 = (?, ?)\\n  vec2 p92 = (?, ?)\\n  vec2 p93 = (?, ?)\\n  vec2 p94 = (?, ?)\\n  vec2 p95 = (?, ?)\\n  vec2 p96 = (?, ?)\\n  vec2 p97 = (?, ?)\\n  vec2 p98 = (?, ?)\\n  vec2 p99 = (?, ?)\\n\\n  shape c.poly = Polygon {\\n    points: [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36, p37, p38, p39, p40, p41, p42, p43, p44, p45, p46, p47, p48, p49, p50, p51, p52, p53, p54, p55, p56, p57, p58, p59, p60, p61, p62, p63, p64, p65, p66, p67, p68, p69, p70, p71, p72, p73, p74, p75,  p76, p77, p78, p79, p80, p81, p82, p83, p84, p85, p86, p87, p88, p89, p90, p91, p92, p93, p94, p95, p96, p97, p98, p99]\\n    strokeWidth: 2\\n    strokeColor: #000\\n  }\\n\\n  ensure equal(perimeter(c.poly.points, true), length)\\n  ensure isEquilateral(c.poly.points, true)\\n  encourage equal(elasticEnergy(c.poly.points, true), 0)  -- works better than `minimal` in this case\\n\\n}\\n\";\n//# sourceMappingURL=closed-elastic-curve.style.js.map","import substance from \"./cubic-bezier.substance.js\";\nimport style0, { resolver as resolver0 } from \"./closed-elastic-curve.style.js\";\nimport domain from \"./curves.domain.js\";\nexport default {\n    substance,\n    style: [\n        { contents: style0, resolver: resolver0 },\n    ],\n    domain,\n    variation: \"ClamshellKookabura228\",\n    excludeWarnings: []\n};\n//# sourceMappingURL=closed-elastic-curve.trio.js.map"],"names":["resolver","makeResolver","style0","closedElasticCurve_trio","substance","resolver0","domain"],"mappings":"iLACO,MAAMA,EAAWC,EAAa,gBAAgB,EACrDC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECCAC,EAAA,CACX,UAAAC,EACA,MAAO,CACH,CAAE,SAAUF,EAAQ,SAAUG,CAAW,CAC5C,EACD,OAAAC,EACA,UAAW,wBACX,gBAAiB,CAAE,CACvB"}