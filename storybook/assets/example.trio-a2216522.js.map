{"version":3,"file":"example.trio-a2216522.js","sources":["../../../examples/dist/word-cloud/example.substance.js","../../../examples/dist/word-cloud/word-cloud.style.js","../../../examples/dist/word-cloud/word-cloud.domain.js","../../../examples/dist/word-cloud/example.trio.js"],"sourcesContent":["export default \"AWord Shells\\nAWord Minkowski\\nAWord Exact\\nAWord Riemannian\\nAWord BCs\\nAWord CurveSurface\\n\\nBWord Tools\\nBWord Survey\\nBWord Courses\\nBWord Software\\nBWord Videos\\n\\nAutoLabel All\\nLabel Riemannian \\\"shape space formulation\\\"\\nLabel BCs \\\"boundary conditions\\\"\\nLabel Shells \\\"repulsive shells\\\"\\nLabel Exact \\\"exact discretization\\\"\\nLabel CurveSurface \\\"repulsive curves + surfaces\\\"\\nLabel Minkowski \\\"Minkowski penalties\\\"\\nLabel Tools \\\"end-user tools\\\"\\nLabel Survey \\\"survey article\\\"\\nLabel Courses \\\"local & outreach courses\\\"\\nLabel Software \\\"open-source software\\\"\\nLabel Videos \\\"K-12 videos\\\"\\n\\n\";\n//# sourceMappingURL=example.substance.js.map","import { makeResolver } from \"../resolver.js\";\nexport const resolver = makeResolver(\"word-cloud\");\nexport default \"-- Set the target diagram size\\ncanvas {\\n   width = 240\\n   height = 180\\n}\\n\\n-- A few colors used throughout\\nColors {\\n   color black = rgba(0.,0.,0.,1.)\\n   color lightBlue = rgba( 27./255., 31./255., 138./255., .2 )\\n   color lightGreen = rgba( 27./255., 138./255., 31./255., .2 )\\n}\\n\\n-- Define a global box around the canvas\\nGlobal {\\n   shape box = Rectangle {\\n      center: (0,0)\\n      width: canvas.width\\n      height: canvas.height\\n      strokeColor: rgba(0.,0.,0.,0.)\\n      fillColor: none()\\n      strokeWidth: 1\\n   }\\n}\\n\\n-- Draw each word as text inside a\\n-- rounded rectangle.  Note that this\\n-- rule will get applied to all Words,\\n-- of any subtype.\\nforall Word w {\\n\\n   -- Draw the text\\n   w.text = Text {\\n      center: (?,?) -- the center location will be optimized by Penrose\\n      string: w.label -- the label comes from the Substance program\\n      fillColor: Colors.black\\n      fontFamily: \\\"Palatino\\\"\\n      fontSize: \\\"9px\\\" -- make sure to use px, not pt, since pt appears inconsistently across programs/browsers\\n   }\\n\\n   -- Draw the rectangle\\n   scalar padding = 8\\n   w.box = Rectangle {\\n      -- Use the same center, width, and\\n      -- height as the text, but add some padding\\n      center: w.text.center\\n      width: w.text.width + padding\\n      height: w.text.height + padding\\n\\n      fillColor: Colors.lightGray\\n      strokeColor: Colors.black\\n      strokeWidth: .5\\n      cornerRadius: 5\\n   }\\n\\n   -- Make sure the rectangle is always on the\\n   -- canvas (since the rectangle surrounds the text,\\n   -- the text will also then be on the canvas).\\n   ensure contains( Global.box, w.box )\\n\\n   -- Draw the rectangle and text above the canvas (just in case\\n   -- the canvas is drawn using, e.g., an opaque fill color).\\n   layer w.box above Global.box\\n   layer w.text above Global.box\\n}\\n\\n-- Set specific colors for specific types of text\\nforall AWord w {\\n   override w.box.fillColor = Colors.lightBlue\\n}\\nforall BWord w {\\n   override w.box.fillColor = Colors.lightGreen\\n}\\n\\n-- Make sure no text boxes overlap\\nforall Word w1; Word w2 {\\n   ensure disjoint( w1.box, w2.box, 3. )\\n}\\n\\n-- Encourage words of the same kind to be close to each-other\\nforall AWord w1; AWord w2 {\\n   encourage near( w1.box, w2.box )\\n}\\nforall BWord w1; BWord w2 {\\n   encourage near( w1.box, w2.box )\\n}\\n\\n\\n\";\n//# sourceMappingURL=word-cloud.style.js.map","export default \"type Word\\n\\ntype AWord <: Word -- word related to topic A\\ntype BWord <: Word -- word related to topic B\\n\";\n//# sourceMappingURL=word-cloud.domain.js.map","import substance from \"./example.substance.js\";\nimport style0, { resolver as resolver0 } from \"./word-cloud.style.js\";\nimport domain from \"./word-cloud.domain.js\";\nexport default {\n    substance,\n    style: [\n        { contents: style0, resolver: resolver0 },\n    ],\n    domain,\n    variation: \"JazlynMouse32496\"\n};\n//# sourceMappingURL=example.trio.js.map"],"names":["substance","resolver","makeResolver","style0","domain","example_trio","resolver0"],"mappings":"wEAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECCFC,EAAWC,EAAa,YAAY,EACjDC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECFfC,EAAe;AAAA;AAAA;AAAA;AAAA,ECGAC,EAAA,CACX,UAAAL,EACA,MAAO,CACH,CAAE,SAAUG,EAAQ,SAAUG,CAAW,CAC5C,EACD,OAAAF,EACA,UAAW,kBACf"}