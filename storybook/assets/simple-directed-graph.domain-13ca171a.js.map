{"version":3,"file":"simple-directed-graph.domain-13ca171a.js","sources":["../../../examples/dist/graph-domain/simple-directed-graph.style.js","../../../examples/dist/graph-domain/simple-directed-graph.domain.js"],"sourcesContent":["import { makeResolver } from \"../resolver.js\";\nexport const resolver = makeResolver(\"graph-domain\");\nexport default \"canvas {\\n  width = 400\\n  height = 400\\n}\\n\\nlayout = [dots, arrows, text]\\n\\ncolor {\\n  black = #000000\\n  white = #ffffff\\n  redOrange = #FE4A49\\n}\\n\\nnum {\\n  radius = 5\\n  labelDist = 5\\n  edgeDist = 100\\n  repelDist = 1.5 * edgeDist\\n  offset = 10\\n  loopRadius = 15\\n  pointerX = 6\\n  pointerY = 4\\n}\\n\\nforall Vertex v {\\n  v.dot = Circle {\\n    center: (? in dots, ? in dots)\\n    r: num.radius\\n    fillColor : color.black\\n  }\\n\\n  v.text = Text {\\n    string: v.label\\n    fillColor: color.black\\n    fontFamily: \\\"serif\\\"\\n    fontSize: \\\"18px\\\"\\n    strokeColor: color.white\\n    strokeWidth: 4\\n    paintOrder: \\\"stroke\\\"\\n  }\\n  v.halfSize = (v.text.width / 2, v.text.height / 2)\\n  v.bottomLeft = v.text.center - v.halfSize\\n  v.topRight = v.text.center + v.halfSize\\n\\n  v.text above v.dot\\n\\n  encourage shapeDistance(v.dot, v.text) == num.labelDist in text\\n}\\n\\nforall Vertex u; Vertex v {\\n  d = vdist(u.dot.center, v.dot.center)\\n  dHat = num.repelDist\\n  -- equation 6 from https://ipc-sim.github.io/\\n  encourage minimal(max(0, -sqr(d - dHat) * log(d / dHat))) in dots\\n\\n  ensure disjoint(u.text, v.text, num.labelDist) in text\\n}\\n\\nforall Vertex u; Vertex v where Arc(u, v) as e {\\n  a = u.dot.center\\n  b = v.dot.center\\n  t = normalize(b - a) -- tangent\\n  n = rot90(t) -- normal\\n  m = (a + b) / 2 -- midpoint\\n\\n  e.start = a\\n  e.end = b\\n  e.offset = ? in dots\\n  e.arrow = Path {\\n    d: quadraticCurveFromPoints(\\\"open\\\", [a, m + e.offset * n, b])\\n    strokeColor: color.black\\n  }\\n\\n  e.step = ? in arrows\\n  e.pointerCenter = m + (e.offset / 2) * n + e.step * t\\n  p = e.pointerCenter\\n  x = num.pointerX\\n  y = num.pointerY\\n  e.pointer = Path {\\n    d: pathFromPoints(\\\"closed\\\", [p - x * t + y * n, p + x * t, p - x * t - y * n])\\n    strokeColor: none()\\n    fillColor: color.black\\n  }\\n\\n  e.arrow below u.dot\\n  e.arrow below v.dot\\n  e.pointer below e.arrow\\n\\n  encourage vdist(u.dot.center, v.dot.center) < num.edgeDist in dots\\n  encourage minimal(sqr(e.offset)) in dots\\n  encourage minimal(sqr(e.step)) \\n}\\n\\nforall Vertex u; Vertex v where Arc(u, v) as e1; Arc(u, v) as e2 {\\n  ensure abs(e2.offset - e1.offset) > 2 * num.offset in dots\\n}\\n\\nforall Vertex u; Vertex v where Arc(u, v) as e1; Arc(v, u) as e2 {\\n  ensure abs(e1.offset + e2.offset) > 2 * num.offset in dots\\n}\\n\\nforall Vertex u; Vertex v where Arc(u, v) as e; u has label {\\n  encourage maximal(min(num.labelDist, rectLineDist(u.bottomLeft, u.topRight, e.start, e.end))) in text\\n}\\n\\nforall Vertex u; Vertex v where Arc(u, v) as e; v has label {\\n  encourage maximal(min(num.labelDist, rectLineDist(v.bottomLeft, v.topRight, e.start, e.end))) in text\\n}\\n\\nforall Vertex u; Vertex v; Vertex w where Arc(u, v) as e; w has label {\\n  encourage maximal(min(num.labelDist, rectLineDist(w.bottomLeft, w.topRight, e.start, e.end))) in text\\n}\\n\\nforall Vertex a, b, c, d where Arc(a, b) as e1; Arc(c, d) as e2 {\\n  ensure norm(e2.pointerCenter - e1.pointerCenter) > max(num.pointerX, num.pointerY)*3 in arrows\\n  encourage e1.step == e2.step\\n}\\n\\nforall Vertex v where HighlightVertex(v) {\\n    override v.dot.fillColor = color.redOrange\\n    override v.text.fillColor = color.redOrange\\n}\\n\\nforall Vertex a, b where Arc(a,b) as e; HighlightArc(a,b) {\\n    override e.arrow.strokeColor = color.redOrange \\n    override e.pointer.fillColor = color.redOrange\\n}\";\n//# sourceMappingURL=simple-directed-graph.style.js.map","export default \"type Vertex\\npredicate Arc(Vertex a, Vertex b)\\npredicate HighlightVertex(Vertex a)\\npredicate HighlightArc(Vertex a, Vertex b)\\n\";\n//# sourceMappingURL=simple-directed-graph.domain.js.map"],"names":["resolver","makeResolver","style0","domain"],"mappings":"2CACY,MAACA,EAAWC,EAAa,cAAc,EACnDC,EAAefC,EAAe;AAAA;AAAA;AAAA;"}