{"version":3,"file":"functions.domain-2802b03b.js","sources":["../../../examples/dist/set-theory-domain/continuousmap.style.js","../../../examples/dist/set-theory-domain/continuousmap.substance.js","../../../examples/dist/set-theory-domain/functions.domain.js"],"sourcesContent":["import { makeResolver } from \"../resolver.js\";\nexport const resolver = makeResolver(\"set-theory-domain\");\nexport default \"canvas {\\n  width = 800\\n  height = 700\\n}\\n\\nConst {\\n  strokeWidth = 1.5\\n  padding = 20.0\\n}\\n\\nColors {\\n  black = #000000\\n  lightBlue = #1a1ae633\\n  lightYellow = setOpacity(#f2f5eb, 0.5)\\n}\\n\\nforall Set x {\\n    x.icon = Circle {\\n        fillColor : Colors.lightBlue\\n        strokeColor : Colors.black\\n        strokeStyle : \\\"solid\\\"\\n        strokeWidth : 1.0\\n        -- rotation : 0.0\\n    }\\n\\n    x.text    = Equation {\\n      string : x.label\\n      -- rotation : 0.0\\n    }\\n\\n    x.labelFn = ensure contains(x.icon, x.text)\\n    x.icon below x.text\\n}\\n\\n-- Selector ordering matters!\\nforall Set x; Set y\\nwhere IsSubset(x, y) {\\n  ensure contains(y.icon, x.icon, 10.0)\\n  -- y.sizeFn    = ensure smallerThan(x.icon, y.icon)\\n  y.outsideFn = ensure disjoint(y.text, x.icon, 1.0)\\n  x.icon above y.icon\\n}\\n\\nforall Map f\\nwhere From(f, X, Y); IsSubset(X, R1); IsSubset(Y, R2)\\nwith Set X; Set Y; Set R1; Set R2 {\\n  f.padding = 20.0\\n\\n    f.icon = Line {\\n      start : (R1.icon.center[0] + R1.icon.width / 2.0 + f.padding, R1.icon.center[1])\\n      end : (R2.icon.center[0] - R2.icon.width / 2.0 - f.padding, R2.icon.center[1])\\n      strokeWidth : 2.0\\n      strokeColor : Colors.black\\n      endArrowhead: \\\"straight\\\"\\n        -- style : \\\"curved\\\"\\n    }\\n\\n    f.text = Equation {\\n      -- Doesn't seem to work after the first resample. Is the server updating f.text.height on resample?\\n      -- x : (f.icon.startX + f.icon.endX) / 2.0\\n      -- y : (f.icon.startY + f.icon.endY) / 2.0 + 1.1 * f.text.height\\n      string : f.label\\n    }\\n\\n    encourage centerLabelAbove(f.icon, f.text, 5.0)\\n}\\n\\nforall Set `U` {\\n    override `U`.icon.strokeStyle = \\\"dashed\\\"\\n    override `U`.icon.strokeWidth = Const.strokeWidth\\n}\\n\\nforall Set `V` {\\n    override `V`.icon.strokeStyle = \\\"dashed\\\"\\n    override `V`.icon.strokeWidth = Const.strokeWidth\\n}\\n\\n-- TODO: use subtyping for reals?\\nforall Set `Rn` {\\n    `Rn`.iconSize = canvas.height / 3\\n\\n    override `Rn`.icon = Rectangle {\\n      -- Works but is slow\\n      -- x : -100.0\\n      -- y = 0.0\\n      width : `Rn`.iconSize\\n      height : `Rn`.iconSize\\n      fillColor : Colors.lightYellow\\n      -- rotation : 0.0\\n      strokeWidth : Const.strokeWidth\\n      strokeColor : Colors.black\\n    }\\n\\n    override `Rn`.text.center = (`Rn`.icon.center[0] + `Rn`.icon.width / 2.0 - Const.padding, `Rn`.icon.center[1] + `Rn`.icon.width / 2.0 - Const.padding)\\n\\n    delete `Rn`.labelFn\\n    delete `Rn`.outsideFn\\n\\n}\\n\\nforall Set `Rm`\\nwith Set `Rn` {\\n    -- TODO: factor this block out\\n    override `Rm`.icon = Rectangle {\\n        fillColor : Colors.lightYellow\\n        center : (`Rn`.icon.center[0] + 400.0, `Rn`.icon.center[1])\\n        width : `Rn`.iconSize\\n        height : `Rn`.iconSize\\n        -- rotation : 0.0\\n        strokeWidth : 1.0\\n        strokeColor : Colors.black\\n    }\\n\\n     override `Rm`.text.center = (`Rm`.icon.center[0] + `Rm`.icon.width / 2.0 - Const.padding, `Rm`.icon.center[1] + `Rm`.icon.width / 2.0 - Const.padding)\\n\\n    delete `Rm`.labelFn\\n    delete `Rm`.outsideFn\\n\\n    -- This doesn't seem to work\\n    --    `Rm`.posFn = encourage topRightOf(`Rm`.text, `Rm`.icon)\\n}\";\n//# sourceMappingURL=continuousmap.style.js.map","export default \"AutoLabel All\\n\\nSet A\\nSet U\\nLabel U $f^{-1}(V)$\\nSet Rn\\nLabel Rn $\\\\mathbb{R}^n$\\nIsSubset(U, A)\\nIsSubset(A, Rn)\\n\\nSet B\\nSet V\\nSet Rm\\nLabel Rm $\\\\mathbb{R}^m$\\nIsSubset(V, B)\\nIsSubset(B, Rm)\\n\\nMap f\\nFrom(f, A, B)\";\n//# sourceMappingURL=continuousmap.substance.js.map","export default \"type Set\\ntype Point\\ntype Map\\n\\nconstructor Singleton(Point p) -> Set\\n\\nfunction Intersection(Set a, Set b) -> Set\\nfunction Union(Set a, Set b) -> Set\\nfunction Subtraction(Set a, Set b) -> Set\\nfunction CartesianProduct(Set a, Set b) -> Set\\nfunction Difference(Set a, Set b) -> Set\\nfunction Subset(Set a, Set b) -> Set\\nfunction AddPoint(Point p, Set s1) -> Set\\n\\npredicate Not(Prop p1)\\npredicate From(Map f, Set domain, Set codomain)\\npredicate Empty(Set s)\\npredicate Intersecting(Set s1, Set s2)\\npredicate IsSubset(Set s1, Set s2)\\npredicate Equal(Set s1, Set s2)\\npredicate PointIn(Set s, Point p)\\npredicate In(Point p, Set s)\\npredicate Injection(Map m)\\npredicate Surjection(Map m)\\npredicate Bijection(Map m)\\npredicate PairIn(Point, Point, Map)\\n\\nnotation \\\"A ⊂ B\\\" ~ \\\"IsSubset(A, B)\\\"\\nnotation \\\"p ∈ A\\\" ~ \\\"PointIn(A, p)\\\"\\nnotation \\\"p ∉ A\\\" ~ \\\"PointNotIn(A, p)\\\"\\nnotation \\\"A ∩ B = ∅\\\" ~ \\\"Not(Intersecting(A, B))\\\"\\nnotation \\\"f: A -> B\\\" ~ \\\"Map f; From(f, A, B)\\\"\\n\";\n//# sourceMappingURL=functions.domain.js.map"],"names":["resolver","makeResolver","style0","substance","domain"],"mappings":"2CACY,MAACA,EAAWC,EAAa,mBAAmB,EACxDC,EAAefC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eCAfC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}