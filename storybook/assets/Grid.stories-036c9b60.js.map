{"version":3,"file":"Grid.stories-036c9b60.js","sources":["../../src/Grid.tsx"],"sourcesContent":["import { PathResolver, PenroseState } from \"@penrose/core\";\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Gridbox, GridboxProps } from \"./Gridbox\";\n\ntype DiagramSource = {\n  style: string;\n  domain: string;\n  substance: string;\n  variation: string;\n};\n\nexport interface GridProps {\n  diagrams: DiagramSource[];\n  metadata: (\n    i: number\n  ) => {\n    name: string;\n    data: string;\n  }[];\n  header: (i: number) => string;\n  onSelected?: (n: number) => void;\n  onStateUpdate: (n: number, s: PenroseState) => void;\n  imageResolver?: PathResolver;\n  gridBoxProps?: Partial<GridboxProps>;\n}\n\nconst GridContainer = styled.main`\n  flex-grow: 1;\n  margin-left: \"4rem\";\n`;\n\nconst GridContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst Placeholder = styled.div``;\n\nconst PlaceholderText = styled.h3`\n  font-family: \"Roboto Mono\";\n  color: ${(props) => props.theme.primary};\n`;\n\nexport class Grid extends React.Component<GridProps> {\n  constructor(props: GridProps) {\n    super(props);\n  }\n\n  setSrcState = (newState: PenroseState) => {\n    this.setState({\n      srcState: newState,\n    });\n  };\n\n  innerContent() {\n    return this.props.diagrams.map(\n      ({ substance, domain, style, variation }, i) => (\n        <Gridbox\n          {...this.props.gridBoxProps}\n          key={`grid-${i}`}\n          header={this.props.header(i)}\n          metadata={this.props.metadata(i)}\n          domain={domain}\n          style={style}\n          gridIndex={i}\n          substance={substance}\n          variation={variation}\n          onSelected={this.props.onSelected}\n          onStateUpdate={this.props.onStateUpdate}\n          imageResolver={this.props.imageResolver}\n        />\n      )\n    );\n  }\n\n  render() {\n    const content =\n      this.props.diagrams.length === 0 ? (\n        <Placeholder>\n          <PlaceholderText>\n            {\"(Generated diagrams will appear here)\"}\n          </PlaceholderText>\n        </Placeholder>\n      ) : (\n        this.innerContent()\n      );\n    return (\n      <GridContainer>\n        <GridContent>{content}</GridContent>\n      </GridContainer>\n    );\n  }\n}\n"],"names":["GridContainer","styled","GridContent","Placeholder","PlaceholderText","h3","Grid","React","props","newState","substance","domain","style","variation","gridBoxProps","i","onSelected","onStateUpdate","imageResolver","content","_jsx","__name"],"mappings":"sbA4BA,MAAAA,EAAAC,EAAA;AAAA;AAAA;AAAA,EAKAC,EAAAD,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOAE,EAAAF,EAAA,MAEAG,EAAAH,EAAA;AAAA;AAAA,WAA+BI,GAAAA,EAAAA,MAAAA;AAAAA,EAKxB,MAAAC,UAAAC,EAAA,SAAA,CAA8C,YAAAC,EAAA,CAEjD,MAAAA,CAAA,CAAW,CACb,YAAAC,GAAA,CAGE,KAAA,SAAA,CAAc,SAAAA,CACFA,CAAAA,CACX,EACH,cAAA,CAGE,OAAA,KAAA,MAAA,SAAA,IAAA,CAAA,CACG,UAAAC,EAAEA,OAAAA,EAAWC,MAAAA,EAAQC,UAAAA,CAAOC,EAAAA,IAAAA,EAAAA,cAAAA,EAAAA,CACnB,GAAA,KAAA,MAAA,aACSC,IAAAA,QAAAA,IACFC,OAAAA,KAAAA,MAAAA,OAAAA,CAAAA,EACc,SAAA,KAAA,MAAA,SAAAA,CAAA,EACI,OAAAJ,EAC/B,MAAAC,EACA,UAAAG,EACWA,UAAAA,EACX,UAAAF,EACA,WAAA,KAAA,MAAA,WACuBG,cAAAA,KAAAA,MAAAA,cACGC,cAAAA,KAAAA,MAAAA,aACAC,CAAAA,CAAAA,CAE7B,CAEL,QAAA,CAGE,MAAAC,EAAA,KAAA,MAAA,SAAA,SAAA,EAAAC,EAAAjB,EAAA,CAEgB,SAAAiB,EAAAhB,EAAA,CACM,SAAA,uCACb,CAAA,CAAuC,CAAA,EAAA,KAAA,eAMhD,OAAAgB,EAAApB,EAAA,CACgB,SAAAoB,EAAAlB,EAAA,CACA,SAAAiB,CAAEA,CAAAA,CAAO,CAAA,CACP,CAGtB,CAjDOE,EAAAf,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}