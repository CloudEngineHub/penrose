{"version":3,"file":"projection.trio-498fa55c.js","sources":["../../../examples/dist/fake-3d-linear-algebra/projection.substance.js","../../../examples/dist/fake-3d-linear-algebra/fake3d.style.js","../../../examples/dist/fake-3d-linear-algebra/fake3d.domain.js","../../../examples/dist/fake-3d-linear-algebra/projection.trio.js"],"sourcesContent":["export default \"AmbientSpace S\\n\\nHyperplane P\\n\\nHyperplaneInAmbientSpace(P, S)\\n\\nVector v\\n\\nVectorInAmbientSpace(v, S)\\nVectorInHyperplane(v, P, S)\\n\\nVector u\\n\\nVectorInAmbientSpace(u, S)\\nVectorOrthogonalToHyperplane(u, P, S)\\nVectorOrthogonalToVector(u, v, S)\\n\\nVector w := addV(v, u)\\nVectorInAmbientSpace(w, S)\\n\\n\\nAutoLabel All\\n\";\n//# sourceMappingURL=projection.substance.js.map","import { makeResolver } from \"../resolver.js\";\nexport const resolver = makeResolver(\"fake-3d-linear-algebra\");\nexport default \"canvas {\\n    width = 5\\n    height = 5\\n}\\n\\nforall AmbientSpace S {\\n    S.origin = (0., 0., 0.)\\n    S.vp = (0.5, 1, 1) -- viewpoint\\n    S.origin_proj_vp = S.origin - (dot(S.origin, S.vp) / normsq(S.vp)) * S.vp\\n    S.origin_proj_2d = (S.origin_proj_vp[0], S.origin_proj_vp[1])\\n    S.shape = Circle {\\n      center : S.origin_proj_2d\\n      r : .02\\n      fillColor : rgba(0, 0, 0, 255)\\n    }\\n}\\n\\nforall Hyperplane P; AmbientSpace S\\nwhere HyperplaneInAmbientSpace(P, S) {\\n    P.normal_vector = (0, 0, 1)\\n\\n    vec3 vertex1 = (-2, -2, 0)\\n    vec3 vertex2 = (-2, 2, 0)\\n    vec3 vertex3 = (2, 2, 0)\\n    vec3 vertex4 = (2, -2, 0)\\n\\n    vec3 vertex1_o = vertex1 - (dot(vertex1, P.normal_vector) / normsq(P.normal_vector)) * P.normal_vector\\n    vec3 vertex2_o = vertex2 - (dot(vertex2, P.normal_vector) / normsq(P.normal_vector)) * P.normal_vector\\n    vec3 vertex3_o = vertex3 - (dot(vertex3, P.normal_vector) / normsq(P.normal_vector)) * P.normal_vector\\n    vec3 vertex4_o = vertex4 - (dot(vertex4, P.normal_vector) / normsq(P.normal_vector)) * P.normal_vector\\n\\n    vec3 vertex1_proj_vp = vertex1_o - (dot(vertex1_o, S.vp) / normsq(S.vp)) * S.vp\\n    vec3 vertex2_proj_vp = vertex2_o - (dot(vertex2_o, S.vp) / normsq(S.vp)) * S.vp\\n    vec3 vertex3_proj_vp = vertex3_o - (dot(vertex3_o, S.vp) / normsq(S.vp)) * S.vp\\n    vec3 vertex4_proj_vp = vertex4_o - (dot(vertex4_o, S.vp) / normsq(S.vp)) * S.vp\\n\\n  P.shape = Polygon {\\n    strokeWidth : .01\\n    strokeColor : rgba(0., 0., 0., 255.)\\n    points : [(vertex1_proj_vp[0], vertex1_proj_vp[1]), (vertex2_proj_vp[0], vertex2_proj_vp[1]), (vertex3_proj_vp[0], vertex3_proj_vp[1]), (vertex4_proj_vp[0], vertex4_proj_vp[1])]\\n  }\\n}\\n\\nforall Vector v; AmbientSpace S\\nwhere VectorInAmbientSpace(v, S) {\\n  v.vec = (?, ?, ?)\\n\\n  vec3 vec_endpoint_proj_vp = v.vec - (dot(v.vec, S.vp) / normsq(S.vp)) * S.vp\\n\\n  v.shape = Line {\\n    start: S.origin_proj_2d\\n    end: (vec_endpoint_proj_vp[0], vec_endpoint_proj_vp[1])\\n    strokeWidth : 0.01\\n    endArrowhead: \\\"straight\\\"\\n    strokeColor : rgba(0, 0, 0, 255.)\\n  }\\n}\\n\\nforall Vector v; Hyperplane P; AmbientSpace S\\nwhere VectorInHyperplane(v, P, S) {\\n  ensure inRange(v.vec[0], -2, 2)\\n  ensure inRange(v.vec[1], -2, 2)\\n  ensure equal(v.vec[2], 0)\\n  ensure equal(dot(v.vec, P.normal_vector), 0)\\n  v.shape above P.shape\\n}\\n\\nforall Vector v; Hyperplane P; AmbientSpace S\\nwhere VectorOrthogonalToHyperplane(v, P, S) {\\n  scalar multiplier = ?\\n  override v.vec = multiplier * P.normal_vector\\n  encourage notTooClose(v.shape, S.shape, 0.01)\\n}\\n\\nforall Vector v; Vector u; AmbientSpace S\\nwhere VectorOrthogonalToVector(v, u, S) {\\n  encourage nonDegenerateAngle(v.shape, S.shape, u.shape, 500)\\n}\\n\\nforall Vector u; Vector v; Vector w; AmbientSpace S\\nwhere w := addV(u, v); VectorInAmbientSpace(u, S); VectorInAmbientSpace(v, S); VectorInAmbientSpace(w, S) {\\n  override w.vec = u.vec + v.vec\\n\\n  w.dashed_u = Line {\\n    start: v.shape.end\\n    end: w.shape.end\\n    strokeStyle : \\\"dashed\\\"\\n    strokeColor: #70707080\\n    strokeWidth : .01\\n    strokeDasharray: \\\"0.07,0.05\\\"\\n  }\\n  w.dashed_v = Line {\\n    start: u.shape.end\\n    end: w.shape.end\\n    strokeStyle : \\\"dashed\\\"\\n    strokeColor: #70707080\\n    strokeWidth : .01\\n    strokeDasharray: \\\"0.07,0.05\\\"\\n  }\\n}\\n\";\n//# sourceMappingURL=fake3d.style.js.map","export default \"type AmbientSpace\\ntype Hyperplane\\ntype Vector\\n\\npredicate HyperplaneInAmbientSpace(Hyperplane, AmbientSpace)\\npredicate VectorInAmbientSpace(Vector, AmbientSpace)\\npredicate VectorInHyperplane(Vector, Hyperplane, AmbientSpace)\\npredicate VectorOrthogonalToHyperplane(Vector, Hyperplane, AmbientSpace)\\npredicate VectorOrthogonalToVector(Vector, Vector, AmbientSpace)\\n\\nfunction addV(Vector, Vector) -> Vector\\n\";\n//# sourceMappingURL=fake3d.domain.js.map","import substance from \"./projection.substance.js\";\nimport style0, { resolver as resolver0 } from \"./fake3d.style.js\";\nimport domain from \"./fake3d.domain.js\";\nexport default {\n    substance,\n    style: [\n        { contents: style0, resolver: resolver0 },\n    ],\n    domain,\n    variation: \"SucculentsReindeer397\",\n    excludeWarnings: []\n};\n//# sourceMappingURL=projection.trio.js.map"],"names":["substance","resolver","makeResolver","style0","domain","projection_trio","resolver0"],"mappings":"wEAAA,MAAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECCFC,EAAWC,EAAa,wBAAwB,EAC7DC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECFfC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECGAC,EAAA,CACX,UAAAL,EACA,MAAO,CACH,CAAE,SAAUG,EAAQ,SAAUG,CAAW,CAC5C,EACD,OAAAF,EACA,UAAW,wBACX,gBAAiB,CAAE,CACvB"}