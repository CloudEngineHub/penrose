/* This is the starter code for the style program for the tutorial
 * that teaches functions in Penrose. It's totally normal if you 
 * can't fully understand the existing code. Scroll down to the 
 * bottom and follow along with the write-up. Good luck! :)
 */
 
/**************DO NOT TOUCH ZONE - START**************/
const { 
  scalar perpLen = 20.0
  -- For unit mark
  scalar markerPadding = 15.0
  scalar barSize = 5.0
  scalar vectorSpaceSize = 350.0
  scalar repelWeight = 0.7
  scalar arrowheadSize = 0.7
  scalar lineThickness = 1.
  int intForTesting = 1
  bool boolForTesting = true
  const.arrowThickness = 2.5
  const.arrowThickness2 = 1.5
}

C { 
    color black = rgba(0.,0.,0.,1.)
    white = rgba(1., 1., 1., 1.)
    lightBlue = rgba(1e-1, 0.1, 0.9, 1.0)
    darkGray = rgba(0.4, 0.4, 0.4, 1.)
    gray = rgba(0.6, 0.6, 0.6, 1.)
    green = rgba(0., 0.8, 0., 1.)
    none = rgba(0., 0., 0., 0.)
}


forall VectorSpace U {
    scalar axisSize = const.vectorSpaceSize / 2.0 
    vec2 U.origin = (0., 0.)
    vec2 o = U.origin
    U.axisColor = C.gray

    shape U.background = Square {
        center : U.origin
        side : const.vectorSpaceSize
        color : C.none
        strokeColor : C.none
    }

    shape U.xAxis = Line {
        start : (o[0] - axisSize, o[1])
        end : (o[0] + axisSize, o[1])
        thickness : const.lineThickness
        style : "solid"
        color : U.axisColor
        leftArrowhead: true
        rightArrowhead: true
        arrowheadSize : const.arrowheadSize * 2.
    }

    U.yAxis = Line {
           start : (o[0], o[1] - axisSize)
             end : (o[0], o[1] + axisSize)
       thickness : const.lineThickness
           style : "solid"
           color : U.axisColor
           leftArrowhead: true
           rightArrowhead: true
        arrowheadSize : const.arrowheadSize * 2.
    }

    U.text = Text {
        string : U.label
        center : (U.origin[0] - axisSize, U.origin[1] + axisSize)
        color : U.axisColor
    }
}

forall Vector u; VectorSpace U
where In(u,U) {
  u.text = Text {
    string : u.label
    color : u.shape.color
  }

  u.shape = Arrow {
    start: U.origin
    end : (?, ?)
    thickness : 3.0
    color : C.lightBlue
    arrowheadSize : const.arrowheadSize
  }

  u.vector = (u.shape.end[0] - u.shape.start[0], u.shape.end[1] -u.shape.start[1])

  ensure contains(U.background, u.shape)
  ensure contains(U.background, u.text)
  ensure atDist(u.shape, u.text, 15.0)
  ensure minSize(u.shape)

  layer u.text above U.xAxis
  layer u.text above U.yAxis
}
/**************DO NOT TOUCH ZONE - END**************/

/**************PUT YOUR CODE DOWN HERE**************/
