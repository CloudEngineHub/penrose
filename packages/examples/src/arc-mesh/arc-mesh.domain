-- Connectivity of CAT mesh
type MeshElement
type Vertex <: MeshElement
type Edge <: MeshElement
type Triangle <: MeshElement
constructor Edge(Vertex v0, Vertex v1)
constructor Triangle(Edge e0, Edge e1, Edge e2)

-- TODO: We may want to rename "edge" to "halfedge,"
-- because this is really what it represents.  For instance,
-- Triangles sharing an edge must be built from oppositely-
-- oriented halfedges, and those halfedges must be assigned
-- equal and opposite bend angles to be compatible.  This
-- setup is needed to represent the general case (e.g.,
-- 2D layouts of triangles that don't have zero edge curvature).

-- Basic geometry in the plane
type Geometry
type Angle <: Geometry
type Arc <: Geometry
type Circle <: Geometry
type Point <: Geometry
type Segment <: Geometry

-- Optionally, the location of a vertex and bending angle
-- of an edge can be specified explicitly by numerical values
-- NOTE: Due to a bug in Penrose, you cannot set x = y
predicate SetPosition( Vertex v, Number x, Number y )
predicate SetBendAngle( Edge e, Number alpha )

-- Straight corners mark angles in the straight edge triangle
constructor FirstStraightCorner( Triangle ijk ) -> Angle
constructor SecondStraightCorner( Triangle ijk ) -> Angle
constructor ThirdStraightCorner( Triangle ijk ) -> Angle

-- Circular corners mark angles in the circular arc triangle
constructor FirstCircularCorner( Triangle ijk ) -> Angle
constructor SecondCircularCorner( Triangle ijk ) -> Angle
constructor ThirdCircularCorner( Triangle ijk ) -> Angle

-- Bend angles mark angles at the start/end of a circular edge
constructor StartBendAngle( Edge ij ) -> Angle
constructor EndBendAngle( Edge ij ) -> Angle

-- Decorations for illustrating various quantities/constructions
constructor LengthMarker( Edge ij ) -> Segment
constructor ArcLengthMarker( Edge ij ) -> Arc
constructor CircleThrough( Edge e ) -> Circle
constructor CenterOf( Circle c ) -> Point
constructor RadiusOf( Circle c ) -> Segment

-- Toggles to show/hide different parts of the figure
predicate HighlightVertex( Vertex v )
predicate ShowStraightRegion( Triangle t )
predicate HideCircularRegion( Triangle t )
predicate ShowStraightEdge( Edge e )
predicate HideCircularEdge( Edge e )
predicate HighlightCircularEdge( Edge e )
predicate DeemphasizeCircularEdge( Edge e )
predicate HideWedge( Angle A )

