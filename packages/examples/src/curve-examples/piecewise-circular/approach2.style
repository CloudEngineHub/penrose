canvas {
  width = 600
  height = 400
}

layout = [first, second]

forall Arc c {

  scalar DAngle1 = ?
  scalar DAngle2 = ?
  scalar DAngle3 = ?
  scalar DAngle4 = ?
  scalar DAngle5 = ?

  scalar dAngle1 = max(0.1, min(3.0, DAngle1))
  scalar dAngle2 = max(0.1, min(3.0, DAngle2))
  scalar dAngle3 = max(0.1, min(3.0, DAngle3))
  scalar dAngle4 = max(0.1, min(3.0, DAngle4))
  scalar dAngle5 = max(0.1, min(3.0, DAngle5))

  ensure lessThan(0.2, DAngle1) in second
  ensure lessThan(DAngle1, 2.5) in second
  ensure lessThan(0.2, DAngle2) in second
  ensure lessThan(DAngle2, 2.5) in second
  ensure lessThan(0.2, DAngle3) in second
  ensure lessThan(DAngle3, 2.5) in second
  ensure lessThan(0.2, DAngle4) in second
  ensure lessThan(DAngle4, 2.5) in second
  ensure lessThan(0.2, DAngle5) in second
  ensure lessThan(DAngle5, 2.5) in second

  scalar angle0 = ?
  scalar angle1 = angle0 + dAngle1
  scalar angle2 = angle1 + dAngle2
  scalar angle3 = angle2 + dAngle3
  scalar angle4 = angle3 + dAngle4
  scalar angle5 = angle4 + dAngle5

  vec2 t0 = (cos(angle0), sin(angle0))
  vec2 t1 = (cos(angle1), sin(angle1))
  vec2 t2 = (cos(angle2), sin(angle2))
  vec2 t3 = (cos(angle3), sin(angle3))
  vec2 t4 = (cos(angle4), sin(angle4))
  vec2 t5 = (cos(angle5), sin(angle5))

  -- encourage equal(dAngle1, dAngle2) in second
  -- encourage equal(dAngle2, dAngle3) in second
  -- encourage equal(dAngle3, dAngle4) in second
  -- encourage equal(dAngle4, dAngle5) in second
  -- encourage equal(dAngle5, dAngle1) in second

  vec2 n0 = (t0[1], -t0[0])
  vec2 n1 = (t1[1], -t1[0])
  vec2 n2 = (t2[1], -t2[0])
  vec2 n3 = (t3[1], -t3[0])
  vec2 n4 = (t4[1], -t4[0])
  vec2 n5 = (t5[1], -t5[0])

  scalar R1 = ?
  scalar R2 = ?
  scalar R3 = ?
  scalar R4 = ?
  scalar R5 = ?

  ensure lessThan(40, R1) in second
  ensure lessThan(R1, 150) in second
  ensure lessThan(40, R2) in second
  ensure lessThan(R2, 150) in second
  ensure lessThan(40, R3) in second
  ensure lessThan(R3, 150) in second
  ensure lessThan(40, R4) in second
  ensure lessThan(R4, 150) in second
  ensure lessThan(40, R5) in second
  ensure lessThan(R5, 150) in second

  scalar r1 = max(20, min(200, R1))
  scalar r2 = max(20, min(200, R2))
  scalar r3 = max(20, min(200, R3))
  scalar r4 = max(20, min(200, R4))
  scalar r5 = max(20, min(200, R5))

  -- encourage equal(r1, r2) in second
  -- encourage equal(r2, r3) in second
  -- encourage equal(r3, r4) in second
  -- encourage equal(r4, r5) in second
  -- encourage equal(r5, r1) in second

  scalar l1 = abs(2 * 3.14 * r1 / dAngle1)
  scalar l2 = abs(2 * 3.14 * r2 / dAngle2)
  scalar l3 = abs(2 * 3.14 * r3 / dAngle3)
  scalar l4 = abs(2 * 3.14 * r4 / dAngle4)
  scalar l5 = abs(2 * 3.14 * r5 / dAngle5)

  -- ensure lessThan(10, l1) in second
  -- ensure lessThan(l1, 300) in second
  -- ensure lessThan(10, l2) in second
  -- ensure lessThan(l2, 300) in second
  -- ensure lessThan(10, l3) in second
  -- ensure lessThan(l3, 300) in second
  -- ensure lessThan(10, l4) in second
  -- ensure lessThan(l4, 300) in second
  -- ensure lessThan(10, l5) in second
  -- ensure lessThan(l5, 300) in second
  
  vec2 p0 = (?, ?)
  vec2 c1 = p0 - r1 * n0
  vec2 p1 = c1 + r1 * n1
  vec2 c2 = p1 - r2 * n1
  vec2 p2 = c2 + r2 * n2
  vec2 c3 = p2 - r3 * n2
  vec2 p3 = c3 + r3 * n3
  vec2 c4 = p3 - r4 * n3
  vec2 p4 = c4 + r4 * n4
  vec2 c5 = p4 - r5 * n4
  vec2 p5 = c5 + r5 * n5

  -- ensure equal(DAngle1, 2 * 3.14 / 5) in first
  -- ensure equal(DAngle2, 2 * 3.14 / 5) in first
  -- ensure equal(DAngle3, 2 * 3.14 / 5) in first
  -- ensure equal(DAngle4, 2 * 3.14 / 5) in first
  -- ensure equal(DAngle5, 2 * 3.14 / 5) in first

  -- ensure equal(r1, 50) in first
  -- ensure equal(r2, 50) in first
  -- ensure equal(r3, 50) in first
  -- ensure equal(r4, 50) in first
  -- ensure equal(r5, 50) in first

  ensure equal(vdist(t0, t5), 0) in second
  ensure equal(vdist(p0, p5), 0) in second

  ensure equal(DAngle1 + DAngle2 + DAngle3 + DAngle4 + DAngle5, 2 * 3.14)

  shape c.arc1 = Path {
    fillColor: none()
    -- strokeColor: #000
    d: arc( "open", p0, p1, (r1, r1), 0, 0, 0 )
    strokeWidth: 2
  }
  shape c.arc2 = Path {
    fillColor: none()
    -- strokeColor: #000
    d: arc( "open", p1, p2, (r2, r2), 0, 0, 0 )
    strokeWidth: 2
  }
  shape c.arc3 = Path {
    fillColor: none()
    -- strokeColor: #000
    d: arc( "open", p2, p3, (r3, r3), 0, 0, 0 )
    strokeWidth: 2
  }
  shape c.arc4 = Path {
    fillColor: none()
    -- strokeColor: #000
    d: arc( "open", p3, p4, (r4, r4), 0, 0, 0 )
    strokeWidth: 2
  }
  shape c.arc5 = Path {
    fillColor: none()
    -- strokeColor: #000
    d: arc( "open", p4, p5, (r5, r5), 0, 0, 0 )
    strokeWidth: 2
  }

}
